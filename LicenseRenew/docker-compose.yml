services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn LicenseRenew.wsgi:application --bind 0.0.0.0:8000 --workers 3
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - static_volume:/project/staticfiles
      - media_volume:/project/media
    depends_on:
      - postgres
      - broker
      - memcached
      - redis   
    restart: always

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A LicenseRenew worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - postgres
      - broker
      - web
      - memcached
      - redis    
    restart: always

  beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A LicenseRenew beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - postgres
      - broker
      - web
      - memcached
      - redis    
    restart: always
  
  frontend:
    build:
      context: ../license-renew-frontend
    expose:
      - 80

  react-nginx:
    image: nginx:alpine
    ports:
      - "3000:80"
    depends_on:
      - frontend
    volumes:
      - ../license-renew-frontend/react.conf:/etc/nginx/conf.d/default.conf:ro
      - ../license-renew-frontend/build:/usr/share/nginx/html:ro

  broker:
    image: rabbitmq:3-management
    container_name: rabbitmq-broker
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: always

  memcached:
    image: memcached:alpine
    ports:
      - "11211:11211"
    restart: always

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: always

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: SubscriptionDB
      POSTGRES_USER: AdminS
      POSTGRES_PASSWORD: 2025
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U AdminS"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  rabbitmq_data:
  postgres_data:
  static_volume:
  media_volume: